// Суть Symbol в том, что он позволяет создать новый ключ для объекта и сделать его "скрытым". Название ключа созданного с помощью Symbol,
// может быть таким же, как и обычный ключ в объекте. Может быть полезным при работе с объектами, которые, например, принадлежат "чужому" коду (библиотеке)
// чтобы создать свои свойства для объектов и случайно ничего не сломать

// Символы уникальны: Symbol("id") !== Symbol("id")

let id = Symbol("id")

const user = {
  id: 1,
  name: "Petr",
  [id]: "1"
}

console.log("перечисляемые свойства объекта будут без Symbol", Object.keys(user)) // [ 'id', 'name' ]
console.log("а так можно получить все свойства вместе с Symbol", Reflect.ownKeys(user)) // [ 'id', 'name', Symbol(id) ]
console.log("доступ к значению по ключу id", user['id'])
console.log("доступ к значению по ключу id созданного через Symbol", user[id])
